[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/data/vap/euismod/src/main/scala/euismod/ListOfLists.scala, /data/vap/euismod/src/main/scala/euismod/Euismod.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/data/vap/euismod/src/main/scala/euismod/implicits.scala, /data/vap/euismod/src/main/scala/euismod/package.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/data/vap/euismod/src/main/scala/euismod/implicits.scala, /data/vap/euismod/src/main/scala/euismod/package.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 2 Scala sources to /data/vap/euismod/target/scala-2.13/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.2[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.2[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 7c2a207f for Scala compiler version 2.13.2[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xplugin:kind-projector_2.10-0.6.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-P:splain:all:true[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xplugin:/home/chris/.cache/coursier/v1/https/repo1.maven.org/maven2/io/tryp/splain_2.13.2/0.5.7/splain_2.13.2-0.5.7.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xplugin:/home/chris/.cache/coursier/v1/https/repo1.maven.org/maven2/org/typelevel/kind-projector_2.13.2/0.11.0/kind-projector_2.13.2-0.11.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/nix/store/3gr6id5i7bi0qhx29vilv1xcwkzjakcl-openjdk-8u272-b10/lib/openjdk/jre/lib/resources.jar:/nix/store/3gr6id5i7bi0qhx29vilv1xcwkzjakcl-openjdk-8u272-b10/lib/openjdk/jre/lib/rt.jar:/nix/store/3gr6id5i7bi0qhx29vilv1xcwkzjakcl-openjdk-8u272-b10/lib/openjdk/jre/lib/sunrsasign.jar:/nix/store/3gr6id5i7bi0qhx29vilv1xcwkzjakcl-openjdk-8u272-b10/lib/openjdk/jre/lib/jsse.jar:/nix/store/3gr6id5i7bi0qhx29vilv1xcwkzjakcl-openjdk-8u272-b10/lib/openjdk/jre/lib/jce.jar:/nix/store/3gr6id5i7bi0qhx29vilv1xcwkzjakcl-openjdk-8u272-b10/lib/openjdk/jre/lib/charsets.jar:/nix/store/3gr6id5i7bi0qhx29vilv1xcwkzjakcl-openjdk-8u272-b10/lib/openjdk/jre/lib/jfr.jar:/nix/store/3gr6id5i7bi0qhx29vilv1xcwkzjakcl-openjdk-8u272-b10/lib/openjdk/jre/classes:/home/chris/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.2/scala-library-2.13.2.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/data/vap/euismod/target/scala-2.13/classes:/home/chris/.cache/coursier/v1/https/repo1.maven.org/maven2/com/chuusai/shapeless_2.13/2.3.3/shapeless_2.13-2.3.3.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 2.55791817 s[0m
[0m[[0m[0mdebug[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from euismod.testingOneTwoThree...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: euismod.testingOneTwoThree[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(euismod.testingOneTwoThree)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(euismod.testingOneTwoThree,ModifiedNames(changes = UsedName(productElement,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(productElementNames,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(toString,[Default]), UsedName(productElementName,[Default]), UsedName(clone,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName($init$,[Default]), UsedName(finalize,[Default]), UsedName(euismod;testingOneTwoThree;init;,[Default]), UsedName(notify,[Default]), UsedName(testingOneTwoThree,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(productPrefix,[Default]), UsedName(copy,[Default]))) invalidates 1 classes due to The euismod.testingOneTwoThree has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(productElement,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(productElementNames,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(toString,[Default]), UsedName(productElementName,[Default]), UsedName(clone,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName($init$,[Default]), UsedName(finalize,[Default]), UsedName(euismod;testingOneTwoThree;init;,[Default]), UsedName(notify,[Default]), UsedName(testingOneTwoThree,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(productPrefix,[Default]), UsedName(copy,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(euismod.testingOneTwoThree)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from euismod.euismod.testingOneTwoThree...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: euismod.euismod.testingOneTwoThree[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(euismod.euismod.testingOneTwoThree)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(euismod.euismod.testingOneTwoThree,ModifiedNames(changes = UsedName(productElement,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(productElementNames,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(toString,[Default]), UsedName(productElementName,[Default]), UsedName(clone,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName($init$,[Default]), UsedName(euismod;euismod;testingOneTwoThree;init;,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(testingOneTwoThree,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(productPrefix,[Default]), UsedName(copy,[Default]))) invalidates 1 classes due to The euismod.euismod.testingOneTwoThree has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(productElement,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(productElementNames,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(toString,[Default]), UsedName(productElementName,[Default]), UsedName(clone,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(isInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName($init$,[Default]), UsedName(euismod;euismod;testingOneTwoThree;init;,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(testingOneTwoThree,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(productPrefix,[Default]), UsedName(copy,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(euismod.euismod.testingOneTwoThree)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from euismod.euismod.package...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: euismod.euismod.package[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(euismod.euismod.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(euismod.euismod.package,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName($asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(package,[Default]), UsedName(implicits,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(testingOneTwoThree,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The euismod.euismod.package has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName($asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(package,[Default]), UsedName(implicits,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(testingOneTwoThree,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(euismod.euismod.package)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from euismod.package...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: euismod.package[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(euismod.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(euismod.package,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName($asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(package,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(testingOneTwoThree,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The euismod.package has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName($asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(package,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(testingOneTwoThree,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(euismod.package)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from euismod.euismod.implicits...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: euismod.euismod.implicits[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(euismod.euismod.implicits)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(euismod.euismod.implicits,ModifiedNames(changes = UsedName(t1,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName($asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(implicits,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]))) invalidates 1 classes due to The euismod.euismod.implicits has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(t1,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName($asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(implicits,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(##,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(euismod.euismod.implicits)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
